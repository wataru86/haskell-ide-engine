jobs:
- job: MacOs_Stack
  timeoutInMinutes: 0
  pool:
    vmImage: macOS-10.14
  strategy:
    matrix:
      stack-def:
        YAML_FILE: stack.yaml
      stack-8.8.1:
        YAML_FILE: stack-8.8.1.yaml
      stack-8.6.5:
        YAML_FILE: stack-8.6.5.yaml
      stack-8.6.4:
        YAML_FILE: stack-8.6.4.yaml
      stack-8.4.4:
        YAML_FILE: stack-8.4.4.yaml
      stack-8.4.3:
        YAML_FILE: stack-8.4.3.yaml
      stack-8.4.2:
        YAML_FILE: stack-8.4.2.yaml
  variables:
    STACK_ROOT: $(Build.SourcesDirectory)/.stack
  steps:
  - task: Cache@2
    inputs:
      key: '"stack" | "$(Agent.OS)" | $(Build.SourcesDirectory)/$(YAML_FILE)'
      path: .azure-cache
      cacheHitVar: CACHE_RESTORED
    displayName: "Download cache"
  - bash: |
      mkdir -p $STACK_ROOT
      tar -vxzf .azure-cache/stack-root.tar.gz -C /
      mkdir -p .stack-work
      tar -vxzf .azure-cache/stack-work.tar.gz
    displayName: "Unpack cache"
    condition: eq(variables.CACHE_RESTORED, 'true')
  - bash: |
      git submodule sync
      git submodule update --init
    displayName: Sync submodules
  - bash: |
      mkdir -p ~/.local/bin
      curl -skL https://get.haskellstack.org/stable/osx-x86_64.tar.gz | \
        tar vxz --strip-components=1 --include '*/stack' -C ~/.local/bin;
    displayName: Install stack
  - bash: |
      source .azure/macos.bashrc
      stack setup --stack-yaml $(YAML_FILE)
    displayName: Install GHC
  - bash: |
      source .azure/macos.bashrc
      stack --stack-yaml $(YAML_FILE) --install-ghc build --only-dependencies
    displayName: Build dependencies
  - bash: |
      source .azure/macos.bashrc
      stack build --stack-yaml $(YAML_FILE)
    displayName: Build `hie`
  - bash: |
      source .azure/macos.bashrc
      stack install --stack-yaml $(YAML_FILE) # `hie` binary required locally for tests
      mkdir .azure-deploy
      stack install --stack-yaml $(YAML_FILE) --local-bin-path .azure-deploy
      cd .azure-deploy
      if [ $YAML_FILE != "stack.yaml" ]; then
        GHC_VERSION=${YAML_FILE:6:5}
        GHC_MAJOR_VERSION=${YAML_FILE:6:3}
        cp hie hie-$GHC_VERSION
        cp hie hie-$GHC_MAJOR_VERSION
      else
        GHC_VERSION=nightly
      fi
      ARTIFACT_NAME=hie-$(hie --numeric-version)-ghc-$GHC_VERSION-macos-x86_64
      tar -vczf $(Build.ArtifactStagingDirectory)/$ARTIFACT_NAME.tar.xz *
    displayName: Install `hie`
  - bash: |
      source .azure/macos.bashrc
      stack build --stack-yaml $(YAML_FILE) --test --bench --only-dependencies
    displayName: Build Test-dependencies
  - bash: |
      ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
      brew update
      brew unlink python@2
      brew install z3
    displayName: "Install Runtime Test-Dependencies: z3"
  - bash: |
      source .azure/macos.bashrc
      stack install --resolver=lts-13.20 liquid-fixpoint-0.8.0.2 liquidhaskell-0.8.6.2
    displayName: "Install Runtime Test-Dependencies: liquidhaskell"
  - bash: |
      source .azure/macos.bashrc
      stack build hoogle --stack-yaml=$(YAML_FILE)
      stack exec hoogle generate --stack-yaml=$(YAML_FILE)
    displayName: "Install Runtime Test-Dependencies: hoogle database"
  - bash: |
      source .azure/macos.bashrc
      brew install cabal-install
    displayName: "Install Runtime Unit Test-Dependencies: cabal"
  - bash: |
      source .azure/macos.bashrc
      stack test :unit-test --stack-yaml $(YAML_FILE)
    displayName: "Run Test: unit-test"
  # TODO: Enable dispatcher-test for ghc-8.4.*
  - bash: |
      source .azure/macos.bashrc
      GHC_MAJOR_VERSION=${YAML_FILE:6:3}
      if [ $GHC_MAJOR_VERSION != "8.4" ]; then
        TEST_TARGETS=:dispatcher-test :plugin-dispatcher-test :wrapper-test
      else
        TEST_TARGETS=:plugin-dispatcher-test :wrapper-test
      fi
      stack test $TEST_TARGETS --stack-yaml $(YAML_FILE)
    displayName: "Run Test: dispatcher-test, plugin-dispatcher-test and wrapper-test"
    condition: False
  # TODO: Enable func-test for ghc-8.4.*
  - bash: |
      source .azure/macos.bashrc
      GHC_MAJOR_VERSION=${YAML_FILE:6:3}
      if [ $GHC_MAJOR_VERSION != "8.4" ]; then
        stack test :func-test --stack-yaml $(YAML_FILE)
      fi
    displayName: "Run Test: func-test"
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: hie-$(Agent.OS)-$(YAML_FILE)
    condition: in(variables['Agent.JobStatus'], 'Succeeded', 'SucceededWithIssues')
  - bash: |
      mkdir -p .azure-cache
      tar -vczf .azure-cache/stack-root.tar.gz $STACK_ROOT
      tar -vczf .azure-cache/stack-work.tar.gz .stack-work
    displayName: "Pack cache"
